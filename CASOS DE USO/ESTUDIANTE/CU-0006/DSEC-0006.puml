@startuml
actor Estudiante
boundary "CancelarTurnoView" as View
control "EstudiantesController" as Controller
entity "Turno" as Turno
database "ReservasRepository" as Repository
participant Profesor

== Flujo principal ==
Estudiante -> View : Acceder a la sección de sus turnos reservados
activate View
View -> Controller : Solicitar lista de turnos reservados
activate Controller
Controller -> Repository : Obtener lista de turnos reservados del estudiante
activate Repository
Repository --> Controller : Lista de turnos reservados
deactivate Repository
Controller --> View : Mostrar lista de turnos reservados
deactivate Controller
View -> Controller : Enviar turno seleccionado
activate Controller
Controller -> Repository : Obtener detalles del turno seleccionado
activate Repository
Repository --> Controller : Detalles del turno
deactivate Repository
Controller --> View : Mostrar detalles del turno y opción para cancelarlo
deactivate Controller
View -> Controller : Enviar confirmación de cancelación
activate Controller
Controller -> Repository : Cancelar turno seleccionado
activate Repository
Repository --> Controller : Confirmación de cancelación
deactivate Repository
Controller -> Repository : Eliminar turno de la lista de turnos reservados del estudiante
activate Repository
Repository --> Controller : Confirmación de eliminación
deactivate Repository
Controller -> Profesor : Notificar cancelación del turno
activate Profesor
Profesor --> Controller : Confirmación de notificación
deactivate Profesor
Controller --> View : Mostrar mensaje de cancelación exitosa
deactivate Controller

== Flujo alternativo ==
alt Cancelación dentro de la ventana de tiempo especificada
    Estudiante -> View : Seleccionar turno a cancelar dentro de la ventana de tiempo especificada
    View -> Controller : Enviar turno seleccionado
    activate Controller
    Controller -> Repository : Cancelar turno seleccionado dentro de la ventana de tiempo especificada
    activate Repository
    Repository --> Controller : Confirmación de cancelación dentro de la ventana de tiempo especificada
    deactivate Repository
    Controller -> Repository : Eliminar turno de la lista de turnos reservados del estudiante
    activate Repository
    Repository --> Controller : Confirmación de eliminación
    deactivate Repository
    Controller -> Profesor : Notificar cancelación del turno dentro de la ventana de tiempo especificada
    activate Profesor
    Profesor --> Controller : Confirmación de notificación
    deactivate Profesor
    Controller --> View : Mostrar mensaje de cancelación exitosa dentro de la ventana de tiempo especificada
    deactivate Controller
end

@enduml
