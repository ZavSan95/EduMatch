@startuml
actor Profesor
boundary "SubirCursoView" as View
control "ProfesoresController" as Controller
entity "Curso" as Curso
database "CursosRepository" as Repository

== Flujo principal ==
Profesor -> View --++: Acceder a la sección de subir curso
View -> Controller --++: Solicitar formulario de curso
Controller -> View --++: Mostrar formulario de curso
View -> Controller --++: Enviar datos del curso
Controller -> Curso --++: Validar datos del curso
Curso -> Controller --++: Datos válidos
Controller -> Repository --++: Registrar curso
Repository -> Controller --++: Confirmación de registro
Controller -> View --++: Confirmación de curso subido

== Flujo alternativo ==
alt [P Profesor decide guardar el curso como borrador]
    Profesor -> View --++: Seleccionar opción de guardar como borrador
    View -> Controller --++: Enviar datos para guardar como borrador
    Controller -> Repository --++: Registrar curso como borrador
    Repository -> Controller --++: Confirmación de registro como borrador
    Controller -> View --++: Confirmación de curso guardado como borrador
end
@enduml
